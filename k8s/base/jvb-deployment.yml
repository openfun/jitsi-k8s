# The Jitsi Videobridge (JVB) component has some special behavior:
# - Each JVB container is publicly accessible on UDP port JVB_PORT (10000 by
#   default), on its node public IP address. It is done with the hostPort
#   feature.
# - Therefore, only one JVB pod can run on each node (k8s prevent hostPort
#   conflicts automatically, so there is no need to configure anti affinity to
#   handle this)
# - JVB pods are scheduled on the jvb nodepool, which have cluster autoscaling
#   enabled to add nodes when necessary
# - JVB opens a port to communicate with other JVBs with the OCTO protocol.
#   The port (JVB_OCTO_BIND_PORT, tcp 4096) is only accessible from within
#   the cluster. JVB advertises its internal IP to other JVB with the
#   environment variable JVB_OCTO_PUBLIC_ADDRESS, which is populated with
#   the fieldref status.podIP
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jvb
  labels:
    app: jvb
spec:
  selector:
    matchLabels:
      app: jvb
  template:
    metadata:
      labels:
        app: jvb
    spec:
      serviceAccountName: jvb
      # In case there is a long running conference on a JVB that should be shut down, give it time to finish
      # It should be equal to the cluster variable max_graceful_termination_sec
      terminationGracePeriodSeconds: 2147483647
      containers:
        - name: jvb
          image: "jitsi/jvb:stable-6865"
          imagePullPolicy: IfNotPresent
           # Hook that waits for users to disconnect before
           # killing the pod
           # - option '-p' specifies the entrypoint process as
           #   process to kill
           # - option '-t' specifies the timeout
          lifecycle:
            preStop:
              exec:
                command: ["/usr/share/jitsi-videobridge/graceful_shutdown.sh", "-p", "1", "-t", "3"]
          envFrom:
            - configMapRef:
                name: jitsi-common
            - configMapRef:
                name: jvb
          env:
            - name: JVB_AUTH_USER
              valueFrom:
                secretKeyRef:
                  name: jitsi-secrets
                  key: JVB_AUTH_USER
            - name: JVB_AUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: jitsi-secrets
                  key: JVB_AUTH_PASSWORD
            - name: JVB_OCTO_PUBLIC_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            # The UDP port 10000 is exposed to the internet on the node
            # public IP address (using hostPort).
            # That means only one JVB container can run per node.
            - name: rtp-udp
              hostPort: 10000
              containerPort: 10000
              protocol: UDP
            - name: octo
              containerPort: 4096
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /about/health
              port: 8080
          readinessProbe:
            httpGet:
              path: /about/health
              port: 8080
          resources:
            limits:
              cpu: 3400m
              memory: 10000Mi
            requests:
              cpu: 3400m
              memory: 10000Mi
        # Sidecar container that exports stats for Prometheus
        # Values are scraped by ./jvb-podmonitor.yml
        - name: exporter
          image: systemli/prometheus-jitsi-meet-exporter:1.1.9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: 9888
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          ports:
            - name: exporter
              containerPort: 9888
              protocol: TCP
          args:
            - "-videobridge-url"
            - "http://localhost:8080/colibri/stats"
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 30m
              memory: 100Mi
        - image: python:3.8
          name: metadata-updater
          command: [ "python3" ]
          args: [ "/opt/jvb-metadata-updater/jvb-metadata-updater.py" ]
          volumeMounts:
            - name: jvb-metadata-updater
              mountPath: /opt/jvb-metadata-updater
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 30m
              memory: 100Mi

      nodeSelector:
        k8s.scaleway.com/pool-name: jvb
      volumes:
        - name: jvb-metadata-updater
          configMap:
            name: jvb-metadata-updater
