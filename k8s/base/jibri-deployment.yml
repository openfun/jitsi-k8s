apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jibri
  name: jibri
spec:
  selector:
    matchLabels:
      app: jibri
# The goal of this matchExpressions selector is to exclude the jibri
# pods with a label status=busy from their ReplicaSet.
# A sidecar container (metadata-updater) is updating the status
# label according to jibri's state.
#
# This mechanism drastically reduces the risk of terminating
# a busy jibri pod when scaling down the deployment.
#
# For more details :
# https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/#isolating-pods-from-a-replicaset
    matchExpressions:
      - {key: status, operator: In, values: [idle, unknown]}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app: jibri
        status: idle
    spec:
      serviceAccountName: jibri
      containers:
      - image: jitsi/jibri:stable-8044
        name: jibri
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /jibri/api/v1.0/health
            port: 2222
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        ports:
        - containerPort: 8822
          name: metrics
          protocol: TCP
        - containerPort: 2222
          name: api
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /jibri/api/v1.0/health
            port: 2222
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          limits:
            cpu: 3000m
            memory: 5000Mi
          requests:
            cpu: 2000m
            memory: 5000Mi
        securityContext:
          capabilities:
            add:
            - NET_BIND_SERVICE
            - SYS_ADMIN
        envFrom:
          - configMapRef:
              name: jitsi-common
          - configMapRef:
              name: jibri
        env:
          - name: JIBRI_XMPP_USER
            valueFrom:
              secretKeyRef:
                name: jitsi-secrets
                key: JIBRI_XMPP_USER
          - name: JIBRI_XMPP_PASSWORD
            valueFrom:
              secretKeyRef:
                name: jitsi-secrets
                key: JIBRI_XMPP_PASSWORD
          - name: JIBRI_RECORDER_USER
            valueFrom:
              secretKeyRef:
                name: jitsi-secrets
                key: JIBRI_RECORDER_USER
          - name: JIBRI_RECORDER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: jitsi-secrets
                key: JIBRI_RECORDER_PASSWORD
        volumeMounts:
        - name: shm
          mountPath: /dev/shm
        - name: jibri-config
          mountPath: /config
      - image: prayagsingh/prometheus-jibri-exporter:1.3.0
        name: exporter
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /metrics
            port: 9889
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        ports:
        - containerPort: 9889
          name: exporter
          protocol: TCP
      - image: python:3.8
        name: metadata-updater
        command: [ "python3" ]
        args: [ "/opt/jibri-metadata-updater/jibri-metadata-updater.py" ]
        volumeMounts:
        - name: jibri-metadata-updater
          mountPath: /opt/jibri-metadata-updater
      nodeSelector:
        k8s.scaleway.com/pool-name: jibri
      restartPolicy: Always
      securityContext: {}
      volumes:
      - name: shm
        hostPath:
          path: /dev/shm
      - name: jibri-config
        emptyDir: {}
      - name: jibri-metadata-updater
        configMap:
          name: jibri-metadata-updater
